import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [prompt, setPrompt] = useState<string>('')
  const [SQL, setSQL] = useState<string>('')
  const [data, setData] = useState<any[]>([])
  
  
  
  const handleSQL = async (SQL: string) => {

    const resp = await fetch('/api/lens', {
      method: "POST",
      body: JSON.stringify({ SQL }),
    })
    let response = await resp.json()
    if(resp.status != 200) return console.error('error', response)
    console.log('SQL resp', response)
    setData(response?.results)

  }

  const handlePrompt = async () => { 
    if(!prompt) return
    console.log('fetching with prompt:', prompt)
    setSQL('loading...')
    const resp = await fetch('/api/genSQL', {
      method: "POST",
      body: JSON.stringify({ prompt }),
    })
    if(resp.status != 200) return console.error('error', resp)
    let response = await resp.json()
    const SQL = "SELECT " + response.data.choices[0].text
    setSQL(SQL)
    await handleSQL(SQL)
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className='text-center'>
        <div className='max-w-2xl mx-auto'>
          <h1 className='text-3xl'>Text 2 SQL for Lens</h1>
          <label>
            <input type="text" value={prompt} onChange={(e) => setPrompt(e.target.value)} className='border-2 border-gray-300 rounded-md p-2 w-96' />
          </label>
          <button className='rounded-md bg-purple-500 text-white p-2' onClick={handlePrompt}>Search</button>

          {SQL ? 
            <div className='text-base text-left m-2'>{SQL}</div> 
          : null}

          {data.length ? data.map(thing => JSON.stringify(thing)) : null}

        </div>
      </div>
    </>
  )
}
